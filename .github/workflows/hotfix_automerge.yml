name: Automatic merge from master to next-version
on:
  push:
    branches:
      - master
jobs:
  automerge_master_to_next_version:
    name: Merge master into next-version after a PR is merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout next-version
        uses: actions/checkout@v3
        with:
          ref: next-version
          token: ${{ secrets.TI_GITHUB_ACTIONS_TOKEN }}
      - name: Auto Merge
        id: automerge
        uses: devmasx/merge-branch@v1.4.0
        with:
          type: now
          from_branch: master
          target_branch: next-version
          github_token: ${{ secrets.TI_GITHUB_ACTIONS_TOKEN }}
          label_name: AutoMerge
        env:
          INPUT_MESSAGE: Auto merge master into next-version
      - name: Reset promotion branch
        if: |
          always() &&
          steps.automerge.outcome != 'success'
        run: |
          git fetch origin master:master
          git reset --hard master
      - name: Create Pull Request
        id: cpr
        if: |
          always() &&
          steps.automerge.outcome != 'success'
        uses: peter-evans/create-pull-request@v3.5.2
        with:
          delete-branch: true
          base: next-version
          branch: next-version-promotion
          title: 'Merge hotfix from master'
          body: |
            This PR merges the master branch back into next-version branch.
          assignees: ${{github.actor}}
      - name: Start notification
        id: notification
        if: |
          always() &&
          steps.automerge.outcome != 'success'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,message,author
          custom_payload: |
            {
              attachments: [{
                color: 'warning',
                pretext: `Auto merge master into next-version failed`,
                fields: [
                  {
                    value: `*Pull Request:* ${{ steps.cpr.outputs.pull-request-url }}`,
                    short: false,
                  },
                  {
                    value: `*Author:* ${process.env.AS_AUTHOR}`,
                    short: false,
                  },
                  {
                    value: `*Commit:* ${process.env.AS_MESSAGE}`,
                    short: false,
                  },
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_DEV }}
